{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "addressPrefix": {
      "type": "string",
      "defaultValue": "172.18.0.0/20",
      "metadata": {
        "description": "Address prefix for the VNet"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the VMs (A mix of upper and lower-case characters, digits and symbols)"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin user name for the Virtual Machines"
      }
    },
    "dns1IP": {
      "type": "string",
      "metadata": {
        "description": "DNS IP"
      }
    },
    "dns1Name": {
      "type": "string",
      "metadata": {
        "description": "DNS Name"
      }
    },
    "dns2IP": {
      "type": "string",
      "metadata": {
        "description": "DNS IP"
      }
    },
    "dns2Name": {
      "type": "string",
      "metadata": {
        "description": "DNS Name"
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique public dns name where the Virtual Machines will be exposed"
      }
    },
    "dnsNameSuffix": {
      "type": "string",
      "metadata": {
        "description": "Internal DNS suffix"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Domain name"
      }
    },
    "hadoopAdmin": {
      "type": "string",
      "metadata": {
        "description": "Hadoop admin who needs admin rights"
      }
    },
    "nodeAddressPrefix": {
      "type": "string",
      "defaultValue": "172.18.1.",
      "metadata": {
        "description": "Prefix of the nodes IP"
      }
    },
    "numberOfDataNodes": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of data nodes for Prod, default to 3"
      }
    },
    "region": {
      "type": "string",
      "defaultValue": "eastus2",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "scriptUri": {
      "type": "string",
      "metadata": {
        "description": "The public github repo where the scripts are."
      }
    },
    "storageAccountPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique namespace for the Storage Account where the VM disks will be placed (alphahumeric characters only)"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "The type of the Storage Account to be created (Default to Standard_LRS)"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "private",
      "metadata": {
        "description": "Subnet name for the virtual network where resources will be provisioned"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "172.18.1.0/24",
      "metadata": {
        "description": "Subnet Prefix"
      }
    },
    "tshirtSize": {
      "type": "string",
      "defaultValue": "Eval",
      "allowedValues": [
        "Eval",
        "Prod"
      ],
      "metadata": {
        "description": "T-shirt size of the Cloudera cluster (Eval, Prod)"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "clouderanet",
      "metadata": {
        "description": "The name of the virtual network provisioned for the deployment"
      }
    },
    "virtualNetworkRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group Name for Vnet. For new VNet leave it empty, otherwise type in existing resource group name"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS14_v2",
      "metadata": {
        "description": "The size of the VMs deployed in the cluster (Defaults to Standard_D14)"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicator for new or exiting Virtual Network"
      }
    },
    "vnetResourceGroup": {
      "type": "string"
    }
  },
  "variables": {
    "templateAPIVersion":"2015-11-01",
    "resourceAPIVersion":"2015-06-15",
    "scriptsUri": "[parameters('scriptUri')]",
    "storageAccount": {
      "prefix": "[parameters('storageAccountPrefix')]",
      "type": "[parameters('storageAccountType')]"
    },
    "clusterTshirtSizeEval": {
      "masterNodeCount": 1,
      "dataNodeCount": "[parameters('numberOfDataNodes')]",
      "highAvailability": "false"
    },
    "clusterTshirtSizeProd": {
      "masterNodeCount": 3,
      "dataNodeCount": "[parameters('numberOfDataNodes')]",
      "highAvailability": "true"
    },
    "clusterSpec": "[variables(concat('clusterTshirtSize', parameters('tshirtSize')))]",
    "vmSpec": {
      "vmSize": "[parameters('vmSize')]",
      "privateIPAddressPrefix": "[parameters('nodeAddressPrefix')]",
      "adminUserName": "[parameters('adminUserName')]",
      "adminPassword": "[parameters('adminPassword')]",
      "dnsNameSuffix": "[parameters('dnsNameSuffix')]",
      "domainName": "[parameters('domainName')]",
      "hadoopAdmin": "[parameters('hadoopAdmin')]",
      "dns1IP": "[parameters('dns1IP')]",
      "dns2IP": "[parameters('dns2IP')]",
      "dns1Name": "[parameters('dns1Name')]",
      "dns2Name": "[parameters('dns2Name')]",
      "masterNodeASName": "[concat(parameters('dnsNamePrefix'), '-mnAS')]",
      "dataNodeASName": "[concat(parameters('dnsNamePrefix'), '-dnAS')]"
    },
    "networkSpec": {
      "addressPrefix": "[parameters('addressPrefix')]",
      "subnetPrefix": "[parameters('subnetPrefix')]",
      "privateIPPrefix": "[parameters('nodeAddressPrefix')]",
      "masterNodeAddressStart": 10,
      "dataNodeAddressStart": 20,
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "virtualNetworkSubnetName": "[parameters('subnetName')]",
      "VnetID": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
    }
  },
  "resources": [
    {
      "name": "shared-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/shared-resources.json')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "region": {
            "value": "[parameters('region')]"
          },
          "resourceAPIVersion":{
            "value":"[variables('resourceAPIVersion')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          },
          "masterNodeASName": {
            "value": "[variables('vmSpec').masterNodeASName]"
          },
          "dataNodeASName": {
            "value": "[variables('vmSpec').dataNodeASName]"
          }
        }
      }
    },
    {
      "name": "master-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/shared-resources"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/master-node.json')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "scriptsUri": {
            "value": "[variables('scriptsUri')]"
          },
          "storageAccount": {
            "value": "[variables('storageAccount')]"
          },
          "vmCount": {
            "value": "[variables('clusterSpec').masterNodeCount]"
          },
          "vmSpec": {
            "value": "[variables('vmSpec')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          },
          "clusterSpec": {
            "value": "[variables('clusterSpec')]"
          }
        }
      }
    },
    {
      "name": "data-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/shared-resources"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/data-node.json')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "scriptsUri": {
            "value": "[variables('scriptsUri')]"
          },
          "storageAccount": {
            "value": "[variables('storageAccount')]"
          },
          "vmCount": {
            "value": "[variables('clusterSpec').dataNodeCount]"
          },
          "vmSpec": {
            "value": "[variables('vmSpec')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          },
          "clusterSpec": {
            "value": "[variables('clusterSpec')]"
          }
        }
      }
    },
    {
      "name": "setup-cloudera",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/data-node",
        "Microsoft.Resources/deployments/master-node"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/setup-cloudera.json')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "scriptsUri": {
            "value": "[variables('scriptsUri')]"
          },
          "vmSpec": {
            "value": "[variables('vmSpec')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          },
          "clusterSpec": {
            "value": "[variables('clusterSpec')]"
          },
          "fqdn": {
            "value": "[reference('master-node').outputs.fqdn.value]"
          }
        }
      }
    }
  ]
}
